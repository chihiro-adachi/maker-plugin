language: php
sudo: false

cache:
  directories:
    - $HOME/.composer/cache

php:
  - 7.0
  - 7.1
  - 7.2

env:
  # plugin code
  global:
    PLUGIN_CODE=Maker
    APP_ENV=dev
    APP_DEBUG=1
    MAILER_URL=smtp://localhost:1025
    ECCUBE_AUTH_MAGIC=auth_magic
  matrix:
    # ec-cube experimental/sf
    - ECCUBE_VERSION=experimental/sf DATABASE_URL=mysql://root:@localhost/eccube_db DATABASE_SERVER_VERSION=5
    - ECCUBE_VERSION=experimental/sf DATABASE_URL=postgres://postgres:@localhost/eccube_db DATABASE_SERVER_VERSION=9
    - ECCUBE_VERSION=experimental/sf DATABASE_URL=sqlite:///%kernel.project_dir%/var/eccube.db DATABASE_SERVER_VERSION=3
    - ECCUBE_VERSION=experimental/sf DATABASE_URL=sqlite:///%kernel.project_dir%/var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1
matrix:
  fail_fast: true
  fast_finish: true
  allow_failures:
    - env: ECCUBE_VERSION=experimental/sf DATABASE_URL=sqlite:///%kernel.project_dir%/var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1

install:
  - gem install mime-types -v 2.99.1
  - gem install mailcatcher

before_script:
  # archive plugin
  - tar cvzf ${HOME}/${PLUGIN_CODE}.tar.gz ./*
  # clone ec-cube
  - git clone https://github.com/EC-CUBE/ec-cube.git -b ${ECCUBE_VERSION}
  - cd ec-cube
  # checkout version
#  - sh -c "if [ ! '${ECCUBE_VERSION}' = 'master' ]; then  git checkout -b ${ECCUBE_VERSION} refs/tags/${ECCUBE_VERSION}; fi"
  # update composer
  - composer selfupdate
  - composer install --dev --no-interaction -o
  # install ec-cube
  - sh -c "bin/console eccube:install --no-interaction"
  # install plugin
  - bin/console plugin:develop install --path=${HOME}/${PLUGIN_CODE}.tar.gz
  # enable plugin
  - bin/console plugin:develop enable --code=${PLUGIN_CODE}
  # mail catcher
  - mailcatcher

script:
  # exec phpunit on ec-cube
  - if [ !$COVERAGE ]; then bin/phpunit app/Plugin/${PLUGIN_CODE}/Tests; fi
  - if [ $COVERAGE ];  then bin/phpunit -c app/Plugin/${PLUGIN_CODE}/phpunit.xml.dist --coverage-clover=coverage.clover; fi

after_script:
  # disable plugin
  - bin/console plugin:develop disable --code=${PLUGIN_CODE}
  # uninstall plugin
  - bin/console plugin:develop uninstall --code=${PLUGIN_CODE}
  # re install plugin
  - bin/console plugin:develop install --code=${PLUGIN_CODE}
  # re enable plugin
  - bin/console plugin:develop enable --code=${PLUGIN_CODE}

after_success:
  # for coveralls
  - if [ $COVERAGE ]; then php vendor/bin/coveralls -v -x coverage.clover; fi
